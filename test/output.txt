declare i32 @getint()
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
define i32 @main(){
	%1 = alloca i32
	%2 = alloca i32
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	%5 = alloca i32
	store i32 5, i32* %1
	store i32 5, i32* %2
	%6 = sub i32 0, 2
	store i32 %6, i32* %4
	store i32 2, i32* %5
	%7 = load i32, i32* %1
	%8 = load i32, i32* %2
	%9 = add i32 %7, %8
	%10 = icmp eq i32 %9, 9
	%11 = zext i1 %10 to i32
	%12 = icmp ne i32 %11, 0
	br i1 %12, label %l2, label %l4
  l4:
	%13 = load i32, i32* %1
	%14 = load i32, i32* %2
	%15 = sub i32 %13, %14
	%16 = icmp eq i32 %15, 0
	%17 = zext i1 %16 to i32
	%18 = icmp ne i32 %17, 0
	br i1 %18 ,label %l5, label %l3
  l5:
	%19 = load i32, i32* %5
	%20 = icmp ne i32 %19, 4
	%21 = zext i1 %20 to i32
	%22 = icmp ne i32 %21, 0
	br i1 %22, label %l2, label %l3
  l2:
	%23 = load i32, i32* %5
	%24 = add i32 %23, 3
	store i32 %24, i32* %5
	br label %l1
  l3:
	%25 = load i32, i32* %3
	%26 = load i32, i32* %4
	%27 = add i32 %25, %26
	%28 = sub i32 0, 1
	%29 = icmp ne i32 %27, %28
	%30 = zext i1 %29 to i32
	%31 = icmp ne i32 %30, 0
	br i1 %31, label %l7, label %l8
  l8:
	%32 = load i32, i32* %5
	%33 = add i32 %32, 1
	%34 = srem i32 %33, 2
	%35 = icmp eq i32 %34, 1
	%36 = zext i1 %35 to i32
	%37 = icmp ne i32 %36, 0
	br i1 %37, label %l7, label %l6
  l7:
	%38 = load i32, i32* %5
	%39 = add i32 %38, 4
	store i32 %39, i32* %5
	br label %l6
  l6:
	br label %l1
  l1:
	%40 = load i32, i32* %5
	call void @putint(i32 %40)
	ret i32 0
}
