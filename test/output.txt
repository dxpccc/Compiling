declare i32 @getint()
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
define dso_local i32 @_getMaxOfAll(i32* %r1, i32 %r2) {
	%r3= alloca i32
	store i32 %r2, i32* %r3
	%r4 = alloca i32
	%r5 = sub i32 0, 999999
	store i32 %r5, i32* %r4
	%r6 = load i32, i32* %r3
	%r7 = sub i32 %r6, 1
	store i32 %r7, i32* %r3
	br label %l2
  l2:
	%r8 = load i32, i32* %r3
	%r9 = sub i32 0, 1
	%r10 = icmp sgt i32 %r8, %r9
	%r11 = zext i1 %r10 to i32
	%r12 = icmp ne i32 %r11, 0
	br i1 %r12, label %l3, label %l1
  l3:
	%r13 = load i32, i32* %r3
	%r14 = getelementptr i32, i32* %r1, i32 %r13
	%r15 = load i32, i32* %r14
	%r16 = load i32, i32* %r4
	%r17 = icmp sgt i32 %r15, %r16
	%r18 = zext i1 %r17 to i32
	%r19 = icmp ne i32 %r18, 0
	br i1 %r19, label %l5, label %l4
  l5:
	%r20 = load i32, i32* %r3
	%r21 = getelementptr i32, i32* %r1, i32 %r20
	%r22 = load i32, i32* %r21
	store i32 %r22, i32* %r4
	br label %l4
  l4:
	%r23 = load i32, i32* %r3
	%r24 = sub i32 %r23, 1
	store i32 %r24, i32* %r3
	br label %l2
  l1:
	%r25 = load i32, i32* %r4
	ret i32 %r25
}
define dso_local i32 @main() {
	%r26 = alloca [3 x i32]
	%r27 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 0
	call void @memset(i32* %r27, i32 0, i32 12)
	%r28 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 0
	%r29 = sub i32 0, 2
	store i32 %r29, i32* %r28
	%r30 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 1
	store i32 2, i32* %r30
	%r31 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 2
	%r32 = sub i32 0, 7
	store i32 %r32, i32* %r31
	%r33 = alloca i32
	%r35 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 0
	%r34 = call i32 @_getMaxOfAll(i32* %r35,i32 3)
	%r36 = getelementptr [3 x i32], [3 x i32]* %r26, i32 0, i32 %r34
	%r37 = load i32, i32* %r36
	store i32 %r37, i32* %r33
	%r38 = load i32, i32* %r33
	call void @putint(i32 %r38)
	ret i32 0
}
