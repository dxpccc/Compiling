declare i32 @getint()
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@ans = dso_local global [50 x i32] zeroinitializer
@sum = dso_local global i32 0
@n = dso_local global i32 0
@row = dso_local global [50 x i32] zeroinitializer
@line1 = dso_local global [50 x i32] zeroinitializer
@line2 = dso_local global [100 x i32] zeroinitializer
define dso_local void @printans() {
	%r1 = load i32, i32* @sum
	%r2 = add i32 %r1, 1
	store i32 %r2, i32* @sum
	%r3 = alloca i32
	store i32 1, i32* %r3
	br label %l2
  l2:
	%r4 = load i32, i32* %r3
	%r5 = load i32, i32* @n
	%r6 = icmp sle i32 %r4, %r5
	%r7 = zext i1 %r6 to i32
	%r8 = icmp ne i32 %r7, 0
	br i1 %r8, label %l3, label %l1
  l3:
	%r9 = load i32, i32* %r3
	%r10 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %r9
	%r11 = load i32, i32* %r10
	call void @putint(i32 %r11)
	%r12 = load i32, i32* %r3
	%r13 = load i32, i32* @n
	%r14 = icmp eq i32 %r12, %r13
	%r15 = zext i1 %r14 to i32
	%r16 = icmp ne i32 %r15, 0
	br i1 %r16, label %l5, label %l6
  l5:
	call void @putch(i32 10)
	ret void
	br label %l4
  l6:
	call void @putch(i32 32)
	br label %l4
  l4:
	%r17 = load i32, i32* %r3
	%r18 = add i32 %r17, 1
	store i32 %r18, i32* %r3
	br label %l2
  l1:
	ret void
}
define dso_local void @f(i32 %r19) {
	%r20= alloca i32
	store i32 %r19, i32* %r20
	%r21 = alloca i32
	store i32 1, i32* %r21
	br label %l8
  l8:
	%r22 = load i32, i32* %r21
	%r23 = load i32, i32* @n
	%r24 = icmp sle i32 %r22, %r23
	%r25 = zext i1 %r24 to i32
	%r26 = icmp ne i32 %r25, 0
	br i1 %r26, label %l9, label %l7
  l9:
	%r27 = load i32, i32* %r21
	%r28 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %r27
	%r29 = load i32, i32* %r28
	%r30 = icmp ne i32 %r29, 1
	%r31 = zext i1 %r30 to i32
	%r32 = icmp ne i32 %r31, 0
	br i1 %r32 ,label %l12, label %l10
  l12:
	%r33 = load i32, i32* %r20
	%r34 = load i32, i32* %r21
	%r35 = add i32 %r33, %r34
	%r36 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %r35
	%r37 = load i32, i32* %r36
	%r38 = icmp eq i32 %r37, 0
	%r39 = zext i1 %r38 to i32
	%r40 = icmp ne i32 %r39, 0
	br i1 %r40 ,label %l13, label %l10
  l13:
	%r41 = load i32, i32* @n
	%r42 = load i32, i32* %r20
	%r43 = add i32 %r41, %r42
	%r44 = load i32, i32* %r21
	%r45 = sub i32 %r43, %r44
	%r46 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %r45
	%r47 = load i32, i32* %r46
	%r48 = icmp eq i32 %r47, 0
	%r49 = zext i1 %r48 to i32
	%r50 = icmp ne i32 %r49, 0
	br i1 %r50, label %l11, label %l10
  l11:
	%r51 = load i32, i32* %r20
	%r52 = getelementptr [50 x i32], [50 x i32]* @ans, i32 0, i32 %r51
	%r53 = load i32, i32* %r21
	store i32 %r53, i32* %r52
	%r54 = load i32, i32* %r20
	%r55 = load i32, i32* @n
	%r56 = icmp eq i32 %r54, %r55
	%r57 = zext i1 %r56 to i32
	%r58 = icmp ne i32 %r57, 0
	br i1 %r58, label %l15, label %l14
  l15:
	call void @printans()
	br label %l14
  l14:
	%r59 = load i32, i32* %r21
	%r60 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %r59
	store i32 1, i32* %r60
	%r61 = load i32, i32* %r20
	%r62 = load i32, i32* %r21
	%r63 = add i32 %r61, %r62
	%r64 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %r63
	store i32 1, i32* %r64
	%r65 = load i32, i32* @n
	%r66 = load i32, i32* %r20
	%r67 = add i32 %r65, %r66
	%r68 = load i32, i32* %r21
	%r69 = sub i32 %r67, %r68
	%r70 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %r69
	store i32 1, i32* %r70
	%r71 = load i32, i32* %r20
	%r72 = add i32 %r71, 1
	call void @f(i32 %r72)
	%r73 = load i32, i32* %r21
	%r74 = getelementptr [50 x i32], [50 x i32]* @row, i32 0, i32 %r73
	store i32 0, i32* %r74
	%r75 = load i32, i32* %r20
	%r76 = load i32, i32* %r21
	%r77 = add i32 %r75, %r76
	%r78 = getelementptr [50 x i32], [50 x i32]* @line1, i32 0, i32 %r77
	store i32 0, i32* %r78
	%r79 = load i32, i32* @n
	%r80 = load i32, i32* %r20
	%r81 = add i32 %r79, %r80
	%r82 = load i32, i32* %r21
	%r83 = sub i32 %r81, %r82
	%r84 = getelementptr [100 x i32], [100 x i32]* @line2, i32 0, i32 %r83
	store i32 0, i32* %r84
	br label %l10
  l10:
	%r85 = load i32, i32* %r21
	%r86 = add i32 %r85, 1
	store i32 %r86, i32* %r21
	br label %l8
  l7:
	ret void
}
define dso_local i32 @main() {
	%r87 = alloca i32
	%r88 = call i32 @getint()
	store i32 %r88, i32* %r87
	br label %l17
  l17:
	%r89 = load i32, i32* %r87
	%r90 = icmp sgt i32 %r89, 0
	%r91 = zext i1 %r90 to i32
	%r92 = icmp ne i32 %r91, 0
	br i1 %r92, label %l18, label %l16
  l18:
	%r93 = call i32 @getint()
	store i32 %r93, i32* @n
	call void @f(i32 1)
	%r94 = load i32, i32* %r87
	%r95 = sub i32 %r94, 1
	store i32 %r95, i32* %r87
	br label %l17
  l16:
	ret i32 0
}
