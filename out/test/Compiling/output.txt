declare i32 @getint()
declare i32 @getch()
declare void @putint(i32)
declare void @putch(i32)
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
@n = dso_local global i32 0
define dso_local i32 @bubblesort(i32* %r1) {
	%r2 = alloca i32
	%r3 = alloca i32
	store i32 0, i32* %r2
	br label %l2
  l2:
	%r4 = load i32, i32* %r2
	%r5 = load i32, i32* @n
	%r6 = sub i32 %r5, 1
	%r7 = icmp slt i32 %r4, %r6
	%r8 = zext i1 %r7 to i32
	%r9 = icmp ne i32 %r8, 0
	br i1 %r9, label %l3, label %l1
  l3:
	store i32 0, i32* %r3
	br label %l5
  l5:
	%r10 = load i32, i32* %r3
	%r11 = load i32, i32* @n
	%r12 = load i32, i32* %r2
	%r13 = sub i32 %r11, %r12
	%r14 = sub i32 %r13, 1
	%r15 = icmp slt i32 %r10, %r14
	%r16 = zext i1 %r15 to i32
	%r17 = icmp ne i32 %r16, 0
	br i1 %r17, label %l6, label %l4
  l6:
	%r18 = load i32, i32* %r3
	%r19 = getelementptr i32, i32* %r1, i32 %r18
	%r20 = load i32, i32* %r19
	%r21 = load i32, i32* %r3
	%r22 = add i32 %r21, 1
	%r23 = getelementptr i32, i32* %r1, i32 %r22
	%r24 = load i32, i32* %r23
	%r25 = icmp sgt i32 %r20, %r24
	%r26 = zext i1 %r25 to i32
	%r27 = icmp ne i32 %r26, 0
	br i1 %r27, label %l8, label %l7
  l8:
	%r28 = alloca i32
	%r29 = load i32, i32* %r3
	%r30 = add i32 %r29, 1
	%r31 = getelementptr i32, i32* %r1, i32 %r30
	%r32 = load i32, i32* %r31
	store i32 %r32, i32* %r28
	%r33 = load i32, i32* %r3
	%r34 = add i32 %r33, 1
	%r35 = getelementptr i32, i32* %r1, i32 %r34
	%r36 = load i32, i32* %r3
	%r37 = getelementptr i32, i32* %r1, i32 %r36
	%r38 = load i32, i32* %r37
	store i32 %r38, i32* %r35
	%r39 = load i32, i32* %r3
	%r40 = getelementptr i32, i32* %r1, i32 %r39
	%r41 = load i32, i32* %r28
	store i32 %r41, i32* %r40
	br label %l7
  l7:
	%r42 = load i32, i32* %r3
	%r43 = add i32 %r42, 1
	store i32 %r43, i32* %r3
	br label %l5
  l4:
	%r44 = load i32, i32* %r2
	%r45 = add i32 %r44, 1
	store i32 %r45, i32* %r2
	br label %l2
  l1:
	ret i32 0
}
define dso_local i32 @insertsort(i32* %r46) {
	%r47 = alloca i32
	store i32 1, i32* %r47
	br label %l10
  l10:
	%r48 = load i32, i32* %r47
	%r49 = load i32, i32* @n
	%r50 = icmp slt i32 %r48, %r49
	%r51 = zext i1 %r50 to i32
	%r52 = icmp ne i32 %r51, 0
	br i1 %r52, label %l11, label %l9
  l11:
	%r53 = alloca i32
	%r54 = load i32, i32* %r47
	%r55 = getelementptr i32, i32* %r46, i32 %r54
	%r56 = load i32, i32* %r55
	store i32 %r56, i32* %r53
	%r57 = alloca i32
	%r58 = load i32, i32* %r47
	%r59 = sub i32 %r58, 1
	store i32 %r59, i32* %r57
	br label %l13
  l13:
	%r60 = load i32, i32* %r57
	%r61 = sub i32 0, 1
	%r62 = icmp sgt i32 %r60, %r61
	%r63 = zext i1 %r62 to i32
	%r64 = icmp ne i32 %r63, 0
	br i1 %r64 ,label %l15, label %l12
  l15:
	%r65 = load i32, i32* %r53
	%r66 = load i32, i32* %r57
	%r67 = getelementptr i32, i32* %r46, i32 %r66
	%r68 = load i32, i32* %r67
	%r69 = icmp slt i32 %r65, %r68
	%r70 = zext i1 %r69 to i32
	%r71 = icmp ne i32 %r70, 0
	br i1 %r71, label %l14, label %l12
  l14:
	%r72 = load i32, i32* %r57
	%r73 = add i32 %r72, 1
	%r74 = getelementptr i32, i32* %r46, i32 %r73
	%r75 = load i32, i32* %r57
	%r76 = getelementptr i32, i32* %r46, i32 %r75
	%r77 = load i32, i32* %r76
	store i32 %r77, i32* %r74
	%r78 = load i32, i32* %r57
	%r79 = sub i32 %r78, 1
	store i32 %r79, i32* %r57
	br label %l13
  l12:
	%r80 = load i32, i32* %r57
	%r81 = add i32 %r80, 1
	%r82 = getelementptr i32, i32* %r46, i32 %r81
	%r83 = load i32, i32* %r53
	store i32 %r83, i32* %r82
	%r84 = load i32, i32* %r47
	%r85 = add i32 %r84, 1
	store i32 %r85, i32* %r47
	br label %l10
  l9:
	ret i32 0
}
define dso_local i32 @QuickSort(i32* %r86, i32 %r87, i32 %r88) {
	%r89= alloca i32
	store i32 %r88, i32* %r89
	%r90= alloca i32
	store i32 %r87, i32* %r90
	%r91 = load i32, i32* %r90
	%r92 = load i32, i32* %r89
	%r93 = icmp slt i32 %r91, %r92
	%r94 = zext i1 %r93 to i32
	%r95 = icmp ne i32 %r94, 0
	br i1 %r95, label %l17, label %l16
  l17:
	%r96 = alloca i32
	%r97 = load i32, i32* %r90
	store i32 %r97, i32* %r96
	%r98 = alloca i32
	%r99 = load i32, i32* %r89
	store i32 %r99, i32* %r98
	%r100 = alloca i32
	%r101 = load i32, i32* %r90
	%r102 = getelementptr i32, i32* %r86, i32 %r101
	%r103 = load i32, i32* %r102
	store i32 %r103, i32* %r100
	br label %l19
  l19:
	%r104 = load i32, i32* %r96
	%r105 = load i32, i32* %r98
	%r106 = icmp slt i32 %r104, %r105
	%r107 = zext i1 %r106 to i32
	%r108 = icmp ne i32 %r107, 0
	br i1 %r108, label %l20, label %l18
  l20:
	br label %l22
  l22:
	%r109 = load i32, i32* %r96
	%r110 = load i32, i32* %r98
	%r111 = icmp slt i32 %r109, %r110
	%r112 = zext i1 %r111 to i32
	%r113 = icmp ne i32 %r112, 0
	br i1 %r113 ,label %l24, label %l21
  l24:
	%r114 = load i32, i32* %r98
	%r115 = getelementptr i32, i32* %r86, i32 %r114
	%r116 = load i32, i32* %r115
	%r117 = load i32, i32* %r100
	%r118 = sub i32 %r117, 1
	%r119 = icmp sgt i32 %r116, %r118
	%r120 = zext i1 %r119 to i32
	%r121 = icmp ne i32 %r120, 0
	br i1 %r121, label %l23, label %l21
  l23:
	%r122 = load i32, i32* %r98
	%r123 = sub i32 %r122, 1
	store i32 %r123, i32* %r98
	br label %l22
  l21:
	%r124 = load i32, i32* %r96
	%r125 = load i32, i32* %r98
	%r126 = icmp slt i32 %r124, %r125
	%r127 = zext i1 %r126 to i32
	%r128 = icmp ne i32 %r127, 0
	br i1 %r128, label %l26, label %l25
  l26:
	%r129 = load i32, i32* %r96
	%r130 = getelementptr i32, i32* %r86, i32 %r129
	%r131 = load i32, i32* %r98
	%r132 = getelementptr i32, i32* %r86, i32 %r131
	%r133 = load i32, i32* %r132
	store i32 %r133, i32* %r130
	%r134 = load i32, i32* %r96
	%r135 = add i32 %r134, 1
	store i32 %r135, i32* %r96
	br label %l25
  l25:
	br label %l28
  l28:
	%r136 = load i32, i32* %r96
	%r137 = load i32, i32* %r98
	%r138 = icmp slt i32 %r136, %r137
	%r139 = zext i1 %r138 to i32
	%r140 = icmp ne i32 %r139, 0
	br i1 %r140 ,label %l30, label %l27
  l30:
	%r141 = load i32, i32* %r96
	%r142 = getelementptr i32, i32* %r86, i32 %r141
	%r143 = load i32, i32* %r142
	%r144 = load i32, i32* %r100
	%r145 = icmp slt i32 %r143, %r144
	%r146 = zext i1 %r145 to i32
	%r147 = icmp ne i32 %r146, 0
	br i1 %r147, label %l29, label %l27
  l29:
	%r148 = load i32, i32* %r96
	%r149 = add i32 %r148, 1
	store i32 %r149, i32* %r96
	br label %l28
  l27:
	%r150 = load i32, i32* %r96
	%r151 = load i32, i32* %r98
	%r152 = icmp slt i32 %r150, %r151
	%r153 = zext i1 %r152 to i32
	%r154 = icmp ne i32 %r153, 0
	br i1 %r154, label %l32, label %l31
  l32:
	%r155 = load i32, i32* %r98
	%r156 = getelementptr i32, i32* %r86, i32 %r155
	%r157 = load i32, i32* %r96
	%r158 = getelementptr i32, i32* %r86, i32 %r157
	%r159 = load i32, i32* %r158
	store i32 %r159, i32* %r156
	%r160 = load i32, i32* %r98
	%r161 = sub i32 %r160, 1
	store i32 %r161, i32* %r98
	br label %l31
  l31:
	br label %l19
  l18:
	%r162 = load i32, i32* %r96
	%r163 = getelementptr i32, i32* %r86, i32 %r162
	%r164 = load i32, i32* %r100
	store i32 %r164, i32* %r163
	%r165 = alloca i32
	%r166 = load i32, i32* %r96
	%r167 = sub i32 %r166, 1
	store i32 %r167, i32* %r165
	%r169 = getelementptr i32, i32* %r86, i32 0
	%r170 = load i32, i32* %r90
	%r171 = load i32, i32* %r165
	%r168 = call i32 @QuickSort(i32* %r169,i32 %r170,i32 %r171)
	store i32 %r168, i32* %r165
	%r172 = load i32, i32* %r96
	%r173 = add i32 %r172, 1
	store i32 %r173, i32* %r165
	%r175 = getelementptr i32, i32* %r86, i32 0
	%r176 = load i32, i32* %r165
	%r177 = load i32, i32* %r89
	%r174 = call i32 @QuickSort(i32* %r175,i32 %r176,i32 %r177)
	store i32 %r174, i32* %r165
	br label %l16
  l16:
	ret i32 0
}
define dso_local i32 @getMid(i32* %r178) {
	%r179 = alloca i32
	%r180 = load i32, i32* @n
	%r181 = srem i32 %r180, 2
	%r182 = icmp eq i32 %r181, 0
	%r183 = zext i1 %r182 to i32
	%r184 = icmp ne i32 %r183, 0
	br i1 %r184, label %l34, label %l35
  l34:
	%r185 = load i32, i32* @n
	%r186 = sdiv i32 %r185, 2
	store i32 %r186, i32* %r179
	%r187 = load i32, i32* %r179
	%r188 = getelementptr i32, i32* %r178, i32 %r187
	%r189 = load i32, i32* %r188
	%r190 = load i32, i32* %r179
	%r191 = sub i32 %r190, 1
	%r192 = getelementptr i32, i32* %r178, i32 %r191
	%r193 = load i32, i32* %r192
	%r194 = add i32 %r189, %r193
	%r195 = sdiv i32 %r194, 2
	ret i32 %r195
	br label %l33
  l35:
	%r196 = load i32, i32* @n
	%r197 = sdiv i32 %r196, 2
	store i32 %r197, i32* %r179
	%r198 = load i32, i32* %r179
	%r199 = getelementptr i32, i32* %r178, i32 %r198
	%r200 = load i32, i32* %r199
	ret i32 %r200
	br label %l33
  l33:
	ret
}
define dso_local i32 @getMost(i32* %r201) {
	%r202 = alloca [1000 x i32]
	%r203 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 0
	call void @memset(i32* %r203, i32 0, i32 4000)
	%r204 = alloca i32
	store i32 0, i32* %r204
	br label %l37
  l37:
	%r205 = load i32, i32* %r204
	%r206 = icmp slt i32 %r205, 1000
	%r207 = zext i1 %r206 to i32
	%r208 = icmp ne i32 %r207, 0
	br i1 %r208, label %l38, label %l36
  l38:
	%r209 = load i32, i32* %r204
	%r210 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 %r209
	store i32 0, i32* %r210
	%r211 = load i32, i32* %r204
	%r212 = add i32 %r211, 1
	store i32 %r212, i32* %r204
	br label %l37
  l36:
	store i32 0, i32* %r204
	%r213 = alloca i32
	%r214 = alloca i32
	store i32 0, i32* %r213
	br label %l40
  l40:
	%r215 = load i32, i32* %r204
	%r216 = load i32, i32* @n
	%r217 = icmp slt i32 %r215, %r216
	%r218 = zext i1 %r217 to i32
	%r219 = icmp ne i32 %r218, 0
	br i1 %r219, label %l41, label %l39
  l41:
	%r220 = alloca i32
	%r221 = load i32, i32* %r204
	%r222 = getelementptr i32, i32* %r201, i32 %r221
	%r223 = load i32, i32* %r222
	store i32 %r223, i32* %r220
	%r224 = load i32, i32* %r220
	%r225 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 %r224
	%r226 = load i32, i32* %r220
	%r227 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 %r226
	%r228 = load i32, i32* %r227
	%r229 = add i32 %r228, 1
	store i32 %r229, i32* %r225
	%r230 = load i32, i32* %r220
	%r231 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 %r230
	%r232 = load i32, i32* %r231
	%r233 = load i32, i32* %r213
	%r234 = icmp sgt i32 %r232, %r233
	%r235 = zext i1 %r234 to i32
	%r236 = icmp ne i32 %r235, 0
	br i1 %r236, label %l43, label %l42
  l43:
	%r237 = load i32, i32* %r220
	%r238 = getelementptr [1000 x i32], [1000 x i32]* %r202, i32 0, i32 %r237
	%r239 = load i32, i32* %r238
	store i32 %r239, i32* %r213
	%r240 = load i32, i32* %r220
	store i32 %r240, i32* %r214
	br label %l42
  l42:
	%r241 = load i32, i32* %r204
	%r242 = add i32 %r241, 1
	store i32 %r242, i32* %r204
	br label %l40
  l39:
	%r243 = load i32, i32* %r214
	ret i32 %r243
}
define dso_local i32 @revert(i32* %r244) {
	%r245 = alloca i32
	%r246 = alloca i32
	%r247 = alloca i32
	store i32 0, i32* %r246
	store i32 0, i32* %r247
	br label %l45
  l45:
	%r248 = load i32, i32* %r246
	%r249 = load i32, i32* %r247
	%r250 = icmp slt i32 %r248, %r249
	%r251 = zext i1 %r250 to i32
	%r252 = icmp ne i32 %r251, 0
	br i1 %r252, label %l46, label %l44
  l46:
	%r253 = load i32, i32* %r246
	%r254 = getelementptr i32, i32* %r244, i32 %r253
	%r255 = load i32, i32* %r254
	store i32 %r255, i32* %r245
	%r256 = load i32, i32* %r246
	%r257 = getelementptr i32, i32* %r244, i32 %r256
	%r258 = load i32, i32* %r247
	%r259 = getelementptr i32, i32* %r244, i32 %r258
	%r260 = load i32, i32* %r259
	store i32 %r260, i32* %r257
	%r261 = load i32, i32* %r247
	%r262 = getelementptr i32, i32* %r244, i32 %r261
	%r263 = load i32, i32* %r245
	store i32 %r263, i32* %r262
	%r264 = load i32, i32* %r246
	%r265 = add i32 %r264, 1
	store i32 %r265, i32* %r246
	%r266 = load i32, i32* %r247
	%r267 = sub i32 %r266, 1
	store i32 %r267, i32* %r247
	br label %l45
  l44:
	ret i32 0
}
define dso_local i32 @arrCopy(i32* %r268, i32* %r269) {
	%r270 = alloca i32
	store i32 0, i32* %r270
	br label %l48
  l48:
	%r271 = load i32, i32* %r270
	%r272 = load i32, i32* @n
	%r273 = icmp slt i32 %r271, %r272
	%r274 = zext i1 %r273 to i32
	%r275 = icmp ne i32 %r274, 0
	br i1 %r275, label %l49, label %l47
  l49:
	%r276 = load i32, i32* %r270
	%r277 = getelementptr i32, i32* %r269, i32 %r276
	%r278 = load i32, i32* %r270
	%r279 = getelementptr i32, i32* %r268, i32 %r278
	%r280 = load i32, i32* %r279
	store i32 %r280, i32* %r277
	%r281 = load i32, i32* %r270
	%r282 = add i32 %r281, 1
	store i32 %r282, i32* %r270
	br label %l48
  l47:
	ret i32 0
}
define dso_local i32 @calSum(i32* %r283, i32 %r284) {
	%r285= alloca i32
	store i32 %r284, i32* %r285
	%r286 = alloca i32
	store i32 0, i32* %r286
	%r287 = alloca i32
	store i32 0, i32* %r287
	br label %l51
  l51:
	%r288 = load i32, i32* %r287
	%r289 = load i32, i32* @n
	%r290 = icmp slt i32 %r288, %r289
	%r291 = zext i1 %r290 to i32
	%r292 = icmp ne i32 %r291, 0
	br i1 %r292, label %l52, label %l50
  l52:
	%r293 = load i32, i32* %r286
	%r294 = load i32, i32* %r287
	%r295 = getelementptr i32, i32* %r283, i32 %r294
	%r296 = load i32, i32* %r295
	%r297 = add i32 %r293, %r296
	store i32 %r297, i32* %r286
	%r298 = load i32, i32* %r287
	%r299 = load i32, i32* %r285
	%r300 = srem i32 %r298, %r299
	%r301 = load i32, i32* %r285
	%r302 = sub i32 %r301, 1
	%r303 = icmp ne i32 %r300, %r302
	%r304 = zext i1 %r303 to i32
	%r305 = icmp ne i32 %r304, 0
	br i1 %r305, label %l54, label %l55
  l54:
	%r306 = load i32, i32* %r287
	%r307 = getelementptr i32, i32* %r283, i32 %r306
	store i32 0, i32* %r307
	br label %l53
  l55:
	%r308 = load i32, i32* %r287
	%r309 = getelementptr i32, i32* %r283, i32 %r308
	%r310 = load i32, i32* %r286
	store i32 %r310, i32* %r309
	store i32 0, i32* %r286
	br label %l53
  l53:
	%r311 = load i32, i32* %r287
	%r312 = add i32 %r311, 1
	store i32 %r312, i32* %r287
	br label %l51
  l50:
	ret i32 0
}
define dso_local i32 @avgPooling(i32* %r313, i32 %r314) {
	%r315= alloca i32
	store i32 %r314, i32* %r315
	%r316 = alloca i32
	%r317 = alloca i32
	store i32 0, i32* %r317
	store i32 0, i32* %r316
	%r318 = alloca i32
	br label %l57
  l57:
	%r319 = load i32, i32* %r317
	%r320 = load i32, i32* @n
	%r321 = icmp slt i32 %r319, %r320
	%r322 = zext i1 %r321 to i32
	%r323 = icmp ne i32 %r322, 0
	br i1 %r323, label %l58, label %l56
  l58:
	%r324 = load i32, i32* %r317
	%r325 = load i32, i32* %r315
	%r326 = sub i32 %r325, 1
	%r327 = icmp slt i32 %r324, %r326
	%r328 = zext i1 %r327 to i32
	%r329 = icmp ne i32 %r328, 0
	br i1 %r329, label %l60, label %l61
  l60:
	%r330 = load i32, i32* %r316
	%r331 = load i32, i32* %r317
	%r332 = getelementptr i32, i32* %r313, i32 %r331
	%r333 = load i32, i32* %r332
	%r334 = add i32 %r330, %r333
	store i32 %r334, i32* %r316
	br label %l59
  l61:
	%r335 = load i32, i32* %r317
	%r336 = load i32, i32* %r315
	%r337 = sub i32 %r336, 1
	%r338 = icmp eq i32 %r335, %r337
	%r339 = zext i1 %r338 to i32
	%r340 = icmp ne i32 %r339, 0
	br i1 %r340, label %l63, label %l64
  l63:
	%r341 = getelementptr i32, i32* %r313, i32 0
	%r342 = load i32, i32* %r341
	store i32 %r342, i32* %r318
	%r343 = getelementptr i32, i32* %r313, i32 0
	%r344 = load i32, i32* %r316
	%r345 = load i32, i32* %r315
	%r346 = sdiv i32 %r344, %r345
	store i32 %r346, i32* %r343
	br label %l62
  l64:
	%r347 = load i32, i32* %r316
	%r348 = load i32, i32* %r317
	%r349 = getelementptr i32, i32* %r313, i32 %r348
	%r350 = load i32, i32* %r349
	%r351 = add i32 %r347, %r350
	%r352 = load i32, i32* %r318
	%r353 = sub i32 %r351, %r352
	store i32 %r353, i32* %r316
	%r354 = load i32, i32* %r317
	%r355 = load i32, i32* %r315
	%r356 = sub i32 %r354, %r355
	%r357 = add i32 %r356, 1
	%r358 = getelementptr i32, i32* %r313, i32 %r357
	%r359 = load i32, i32* %r358
	store i32 %r359, i32* %r318
	%r360 = load i32, i32* %r317
	%r361 = load i32, i32* %r315
	%r362 = sub i32 %r360, %r361
	%r363 = add i32 %r362, 1
	%r364 = getelementptr i32, i32* %r313, i32 %r363
	%r365 = load i32, i32* %r316
	%r366 = load i32, i32* %r315
	%r367 = sdiv i32 %r365, %r366
	store i32 %r367, i32* %r364
	br label %l62
  l62:
	br label %l59
  l59:
	%r368 = load i32, i32* %r317
	%r369 = add i32 %r368, 1
	store i32 %r369, i32* %r317
	br label %l57
  l56:
	%r370 = load i32, i32* @n
	%r371 = load i32, i32* %r315
	%r372 = sub i32 %r370, %r371
	%r373 = add i32 %r372, 1
	store i32 %r373, i32* %r317
	br label %l66
  l66:
	%r374 = load i32, i32* %r317
	%r375 = load i32, i32* @n
	%r376 = icmp slt i32 %r374, %r375
	%r377 = zext i1 %r376 to i32
	%r378 = icmp ne i32 %r377, 0
	br i1 %r378, label %l67, label %l65
  l67:
	%r379 = load i32, i32* %r317
	%r380 = getelementptr i32, i32* %r313, i32 %r379
	store i32 0, i32* %r380
	%r381 = load i32, i32* %r317
	%r382 = add i32 %r381, 1
	store i32 %r382, i32* %r317
	br label %l66
  l65:
	ret i32 0
}
define dso_local i32 @main() {
	store i32 32, i32* @n
	%r383 = alloca [32 x i32]
	%r384 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	call void @memset(i32* %r384, i32 0, i32 128)
	%r385 = alloca [32 x i32]
	%r386 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	call void @memset(i32* %r386, i32 0, i32 128)
	%r387 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	store i32 7, i32* %r387
	%r388 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 1
	store i32 23, i32* %r388
	%r389 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 2
	store i32 89, i32* %r389
	%r390 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 3
	store i32 26, i32* %r390
	%r391 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 4
	store i32 282, i32* %r391
	%r392 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 5
	store i32 254, i32* %r392
	%r393 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 6
	store i32 27, i32* %r393
	%r394 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 7
	store i32 5, i32* %r394
	%r395 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 8
	store i32 83, i32* %r395
	%r396 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 9
	store i32 273, i32* %r396
	%r397 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 10
	store i32 574, i32* %r397
	%r398 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 11
	store i32 905, i32* %r398
	%r399 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 12
	store i32 354, i32* %r399
	%r400 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 13
	store i32 657, i32* %r400
	%r401 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 14
	store i32 935, i32* %r401
	%r402 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 15
	store i32 264, i32* %r402
	%r403 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 16
	store i32 639, i32* %r403
	%r404 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 17
	store i32 459, i32* %r404
	%r405 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 18
	store i32 29, i32* %r405
	%r406 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 19
	store i32 68, i32* %r406
	%r407 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 20
	store i32 929, i32* %r407
	%r408 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 21
	store i32 756, i32* %r408
	%r409 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 22
	store i32 452, i32* %r409
	%r410 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 23
	store i32 279, i32* %r410
	%r411 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 24
	store i32 58, i32* %r411
	%r412 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 25
	store i32 87, i32* %r412
	%r413 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 26
	store i32 96, i32* %r413
	%r414 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 27
	store i32 36, i32* %r414
	%r415 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 28
	store i32 39, i32* %r415
	%r416 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 29
	store i32 28, i32* %r416
	%r417 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 30
	store i32 1, i32* %r417
	%r418 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 31
	store i32 290, i32* %r418
	%r419 = alloca i32
	%r421 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r422 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r420 = call i32 @arrCopy(i32* %r421,i32* %r422)
	store i32 %r420, i32* %r419
	%r424 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r423 = call i32 @revert(i32* %r424)
	store i32 %r423, i32* %r419
	%r425 = alloca i32
	store i32 0, i32* %r425
	br label %l69
  l69:
	%r426 = load i32, i32* %r425
	%r427 = icmp slt i32 %r426, 32
	%r428 = zext i1 %r427 to i32
	%r429 = icmp ne i32 %r428, 0
	br i1 %r429, label %l70, label %l68
  l70:
	%r430 = load i32, i32* %r425
	%r431 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r430
	%r432 = load i32, i32* %r431
	store i32 %r432, i32* %r419
	%r433 = load i32, i32* %r419
	call void @putint(i32 %r433)
	%r434 = load i32, i32* %r425
	%r435 = add i32 %r434, 1
	store i32 %r435, i32* %r425
	br label %l69
  l68:
	%r437 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r436 = call i32 @bubblesort(i32* %r437)
	store i32 %r436, i32* %r419
	store i32 0, i32* %r425
	br label %l72
  l72:
	%r438 = load i32, i32* %r425
	%r439 = icmp slt i32 %r438, 32
	%r440 = zext i1 %r439 to i32
	%r441 = icmp ne i32 %r440, 0
	br i1 %r441, label %l73, label %l71
  l73:
	%r442 = load i32, i32* %r425
	%r443 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r442
	%r444 = load i32, i32* %r443
	store i32 %r444, i32* %r419
	%r445 = load i32, i32* %r419
	call void @putint(i32 %r445)
	%r446 = load i32, i32* %r425
	%r447 = add i32 %r446, 1
	store i32 %r447, i32* %r425
	br label %l72
  l71:
	%r449 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r448 = call i32 @getMid(i32* %r449)
	store i32 %r448, i32* %r419
	%r450 = load i32, i32* %r419
	call void @putint(i32 %r450)
	%r452 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r451 = call i32 @getMost(i32* %r452)
	store i32 %r451, i32* %r419
	%r453 = load i32, i32* %r419
	call void @putint(i32 %r453)
	%r455 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r456 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r454 = call i32 @arrCopy(i32* %r455,i32* %r456)
	store i32 %r454, i32* %r419
	%r458 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r457 = call i32 @bubblesort(i32* %r458)
	store i32 %r457, i32* %r419
	store i32 0, i32* %r425
	br label %l75
  l75:
	%r459 = load i32, i32* %r425
	%r460 = icmp slt i32 %r459, 32
	%r461 = zext i1 %r460 to i32
	%r462 = icmp ne i32 %r461, 0
	br i1 %r462, label %l76, label %l74
  l76:
	%r463 = load i32, i32* %r425
	%r464 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r463
	%r465 = load i32, i32* %r464
	store i32 %r465, i32* %r419
	%r466 = load i32, i32* %r419
	call void @putint(i32 %r466)
	%r467 = load i32, i32* %r425
	%r468 = add i32 %r467, 1
	store i32 %r468, i32* %r425
	br label %l75
  l74:
	%r470 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r471 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r469 = call i32 @arrCopy(i32* %r470,i32* %r471)
	store i32 %r469, i32* %r419
	%r473 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r472 = call i32 @insertsort(i32* %r473)
	store i32 %r472, i32* %r419
	store i32 0, i32* %r425
	br label %l78
  l78:
	%r474 = load i32, i32* %r425
	%r475 = icmp slt i32 %r474, 32
	%r476 = zext i1 %r475 to i32
	%r477 = icmp ne i32 %r476, 0
	br i1 %r477, label %l79, label %l77
  l79:
	%r478 = load i32, i32* %r425
	%r479 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r478
	%r480 = load i32, i32* %r479
	store i32 %r480, i32* %r419
	%r481 = load i32, i32* %r419
	call void @putint(i32 %r481)
	%r482 = load i32, i32* %r425
	%r483 = add i32 %r482, 1
	store i32 %r483, i32* %r425
	br label %l78
  l77:
	%r485 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r486 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r484 = call i32 @arrCopy(i32* %r485,i32* %r486)
	store i32 %r484, i32* %r419
	store i32 0, i32* %r425
	store i32 31, i32* %r419
	%r488 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r489 = load i32, i32* %r425
	%r490 = load i32, i32* %r419
	%r487 = call i32 @QuickSort(i32* %r488,i32 %r489,i32 %r490)
	store i32 %r487, i32* %r419
	br label %l81
  l81:
	%r491 = load i32, i32* %r425
	%r492 = icmp slt i32 %r491, 32
	%r493 = zext i1 %r492 to i32
	%r494 = icmp ne i32 %r493, 0
	br i1 %r494, label %l82, label %l80
  l82:
	%r495 = load i32, i32* %r425
	%r496 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r495
	%r497 = load i32, i32* %r496
	store i32 %r497, i32* %r419
	%r498 = load i32, i32* %r419
	call void @putint(i32 %r498)
	%r499 = load i32, i32* %r425
	%r500 = add i32 %r499, 1
	store i32 %r500, i32* %r425
	br label %l81
  l80:
	%r502 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r503 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r501 = call i32 @arrCopy(i32* %r502,i32* %r503)
	store i32 %r501, i32* %r419
	%r505 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r504 = call i32 @calSum(i32* %r505,i32 4)
	store i32 %r504, i32* %r419
	store i32 0, i32* %r425
	br label %l84
  l84:
	%r506 = load i32, i32* %r425
	%r507 = icmp slt i32 %r506, 32
	%r508 = zext i1 %r507 to i32
	%r509 = icmp ne i32 %r508, 0
	br i1 %r509, label %l85, label %l83
  l85:
	%r510 = load i32, i32* %r425
	%r511 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r510
	%r512 = load i32, i32* %r511
	store i32 %r512, i32* %r419
	%r513 = load i32, i32* %r419
	call void @putint(i32 %r513)
	%r514 = load i32, i32* %r425
	%r515 = add i32 %r514, 1
	store i32 %r515, i32* %r425
	br label %l84
  l83:
	%r517 = getelementptr [32 x i32], [32 x i32]* %r383, i32 0, i32 0
	%r518 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r516 = call i32 @arrCopy(i32* %r517,i32* %r518)
	store i32 %r516, i32* %r419
	%r520 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 0
	%r519 = call i32 @avgPooling(i32* %r520,i32 3)
	store i32 %r519, i32* %r419
	store i32 0, i32* %r425
	br label %l87
  l87:
	%r521 = load i32, i32* %r425
	%r522 = icmp slt i32 %r521, 32
	%r523 = zext i1 %r522 to i32
	%r524 = icmp ne i32 %r523, 0
	br i1 %r524, label %l88, label %l86
  l88:
	%r525 = load i32, i32* %r425
	%r526 = getelementptr [32 x i32], [32 x i32]* %r385, i32 0, i32 %r525
	%r527 = load i32, i32* %r526
	store i32 %r527, i32* %r419
	%r528 = load i32, i32* %r419
	call void @putint(i32 %r528)
	%r529 = load i32, i32* %r425
	%r530 = add i32 %r529, 1
	store i32 %r530, i32* %r425
	br label %l87
  l86:
	ret i32 0
}
